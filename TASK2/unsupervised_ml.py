# -*- coding: utf-8 -*-
"""UNSUPERVISED ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KPrg_a4_7FWQLr3mxNMAfGFpNNMY5kKk

**DATA SCIENCE AND BUSINESS ANALYTICS- GRIPJAN2021**

**NAME**: **ANUPAMA A P**

**TASK 2: PREDICTION USING UNSUPERVISED ML**

**From the given ‘Iris’ dataset, predict the optimum number of clusters and represent it visually.**
"""

#let’s import the following libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix

"""Loading Dataset: To upload the file from the local drive write the following code in the cell and run it"""

#Load the data
from google.colab import files 
  
  
uploaded = files.upload()

import pandas as pd 
import io 

df = pd.read_csv(io.BytesIO(uploaded['Iris.csv'])) 
print(df)
df.head()

df['Species'].unique()

df.info()

df.describe()

df.isnull().sum()

#our data through a scatter plot.
ax = df[df.Species=='Iris-setosa'].plot.scatter(x='SepalLengthCm', y='SepalWidthCm', 
                                                    color='red', label='setosa')
df[df.Species=='Iris-versicolor'].plot.scatter(x='SepalLengthCm', y='SepalWidthCm', 
                                                color='green', label='versicolor', ax=ax)
df[df.Species=='Iris-virginica'].plot.scatter(x='SepalLengthCm', y='SepalWidthCm', 
                                                color='blue', label='virginica', ax=ax)
ax.set_title("scatter")

ax = df[df.Species=='Iris-setosa'].plot.scatter(x='PetalLengthCm', y='PetalWidthCm', 
                                                    color='red', label='setosa')
df[df.Species=='Iris-versicolor'].plot.scatter(x='PetalLengthCm', y='PetalWidthCm', 
                                                color='green', label='versicolor', ax=ax)
df[df.Species=='Iris-virginica'].plot.scatter(x='PetalLengthCm', y='PetalWidthCm', 
                                                color='blue', label='virginica', ax=ax)
ax.set_title("scatter")

#data preprocessing
X = df.drop(['Id','Species'],axis=1)
X.head()

Y = df['Species'].map({'Iris-setosa':0 , 'Iris-versicolor':1, 'Iris-virginica':2 })
Y.head()

X.shape,Y.shape

#Model training
kmodel = KNeighborsClassifier(n_neighbors=3)

xtrain,xtest,ytrain,ytest = train_test_split(X,Y,test_size=0.3,random_state=6)

xtest.shape

kmodel.fit(xtrain,ytrain)

#Accuracy and tesing
Yptr = kmodel.predict(xtrain)
(Yptr == ytrain).mean()

Ypts = kmodel.predict(xtest)
(Ypts == ytest).mean()

kmodel.score(xtest,ytest)

Ypred = kmodel.predict(X)
Ypred

"""VISUALISATION"""

plt.figure(figsize=(14,6))

plt.subplot(1, 2, 1)
plt.scatter(X['PetalLengthCm'] ,X['PetalWidthCm'],c = Ypred)
plt.title('Model\'s classification')
plt.subplot(1, 2, 2)
plt.scatter(X['SepalLengthCm'] ,X['SepalWidthCm'],c = Ypred)
plt.title('Model\'s classification')

"""I have successfully carried out prediction using Unsupervised ML Algorithm K-Means Clusturing and was able to evaluate the model's clustering accuracy score."""